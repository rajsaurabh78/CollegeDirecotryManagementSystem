package com.leucine.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;

import com.leucine.dto.FacultyProfileDTO;
import com.leucine.exception.LoginException;
import com.leucine.modal.FacultyProfile;
import com.leucine.modal.Users;
import com.leucine.repository.FacultyProfileRepository;
import com.leucine.repository.UserRepository;

import jakarta.transaction.Transactional;
@Service
public class FacultyProfileServiceImpl implements FacultyProfileService{
	
	@Autowired
	private FacultyProfileRepository facultyProfileRepository;
	
	@Autowired
	private PasswordEncoder passwordEncoder;
	
	@Autowired
	private UserRepository userRepository;

	@Override
	@Transactional
	public FacultyProfile createFaculty(FacultyProfileDTO facultyProfileDTO) {
		Users user=new Users();
		user.setPassword(passwordEncoder.encode(facultyProfileDTO.getPassword()));
		user.setEmail(facultyProfileDTO.getEmail());
		user.setName(facultyProfileDTO.getName());
		user.setPhone(facultyProfileDTO.getPhone());
		user.setRole(facultyProfileDTO.getRole());
		user.setUsername(facultyProfileDTO.getUsername());
		
		FacultyProfile facultyProfile=new FacultyProfile();
		facultyProfile.setOffice_hours(facultyProfileDTO.getOffice_hours());
		facultyProfile.setPhoto(facultyProfileDTO.getPhoto());
		facultyProfile.setUser(user);
		
		userRepository.save(user);
		
		
		Users savedUser=userRepository.save(user);
		facultyProfileRepository.save(facultyProfile);
		return facultyProfile;
	}

	@Override
	public FacultyProfileDTO ownProfile() throws LoginException {
		//checking user exist or not
		Authentication authentication = SecurityContextHolder.getContext().getAuthentication();
		FacultyProfileDTO user = facultyProfileRepository.findByUsername(authentication.getName())
				.orElseThrow(() -> new LoginException("Please Login First"));
		return user;
	}

}
