package com.leucine.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.leucine.dto.AdministratorProfileDTO;
import com.leucine.dto.FacultyProfileDTO;
import com.leucine.dto.StudentDTO;
import com.leucine.dto.StudentProfileDTO;
import com.leucine.modal.AdministratorProfile;
import com.leucine.modal.Course;
import com.leucine.modal.Department;
import com.leucine.modal.FacultyProfile;
import com.leucine.modal.StudentProfile;
import com.leucine.modal.Users;
import com.leucine.service.AdministratorProfileService;
import com.leucine.service.CourseService;
import com.leucine.service.DepartmentService;
import com.leucine.service.FacultyProfileService;
import com.leucine.service.StudentProfileService;
import com.leucine.service.UserService;

import jakarta.validation.Valid;

@RestController
public class UserController {
	
	@Autowired
	private UserService userService;
	
	@Autowired
	private FacultyProfileService facultyProfileService;
	
	@Autowired
	private DepartmentService departmentService;
	
	@Autowired
	private CourseService courseService;
	
	@Autowired
	private StudentProfileService studentProfileService;
	
	@Autowired
	private AdministratorProfileService administratorProfileService;
	
	@PostMapping("/user")
	public ResponseEntity<Users> createUserController(@Valid @RequestBody Users user){
		Users us=userService.createUser(user);
		return new ResponseEntity<>(us,HttpStatus.CREATED);
	}
	
	@GetMapping("/profile")
	public ResponseEntity<Users> ownProfileController(){
		Users us=userService.ownProfile();
		return new ResponseEntity<>(us,HttpStatus.OK);
	}
	
	@PostMapping("/user/department")
	public ResponseEntity<Department> createDepartmentController(@Valid @RequestBody Department department){
		Department us=departmentService.createDepartment(department);
		return new ResponseEntity<>(us,HttpStatus.CREATED);
	}
	
	@PostMapping("/user/course/{cid}/{fid}")
	public ResponseEntity<Course> createCourseController(@Valid @PathVariable("cid") Integer cid,
			@Valid @PathVariable("fid") Integer fid,
			@Valid @RequestBody Course course){
		Course us=courseService.createCourse(cid,fid,course);
		return new ResponseEntity<>(us,HttpStatus.CREATED);
	}
	
	@PostMapping("/user/student/{id}")
	public ResponseEntity<StudentProfile> createStudentController(@Valid @PathVariable("id") Integer id,
			@Valid @RequestBody StudentProfileDTO studentProfileDTO){
		StudentProfile us=studentProfileService.createStudent(id, studentProfileDTO);
		return new ResponseEntity<>(us,HttpStatus.CREATED);
	}
	
	@PostMapping("/user/admin/{id}")
	public ResponseEntity<AdministratorProfile> createAdministratorController(@Valid @PathVariable("id") Integer id,
			@Valid @RequestBody AdministratorProfileDTO administratorProfileDTO){
		AdministratorProfile us=administratorProfileService.createAdministrator(id, administratorProfileDTO);
		return new ResponseEntity<>(us,HttpStatus.CREATED);
	}
	
	@GetMapping("/studentprofile")
	public ResponseEntity<StudentDTO> studentProfileController(){
		StudentDTO us=studentProfileService.ownProfile();
		return new ResponseEntity<>(us,HttpStatus.OK);
	}
	
	@GetMapping("/users/{name}")
	public ResponseEntity<List<Users>> findByNameController(@Valid @PathVariable("name") String name){
		List<Users> us=studentProfileService.findByName(name);
		return new ResponseEntity<>(us,HttpStatus.OK);
	}
	
	@GetMapping("/users/year/{year}")
	public ResponseEntity<List<Users>> findByyearProfileController(@Valid @PathVariable("year") String year){
		List<Users> us=studentProfileService.findByYear(year);
		return new ResponseEntity<>(us,HttpStatus.OK);
	}
	
	@GetMapping("/users/department/{department}")
	public ResponseEntity<List<Users>> findByDepartmentController(@Valid @PathVariable("department") String department){
		List<Users> us=studentProfileService.findByDEpartment(department);
		return new ResponseEntity<>(us,HttpStatus.OK);
	}
	


}
